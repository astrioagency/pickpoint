<?php
/**
 * Astrio Co.
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0).
 * It is available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you are unable to obtain it through the world-wide-web, please send
 * an email to info@astrio.net so we can send you a copy immediately.
 *
 * @category  Astrio
 * @package   Astrio_Pickpoint
 * @copyright Copyright (c) 2010-2017 Astrio Co. (http://astrio.net)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
?>
<?php
/**
 * PickPoint update links block template
 * 
 * @author Vladimir Khalzov <v.khalzov@astrio.net>
 *
 * @var $this Astrio_Pickpoint_Block_Adminhtml_System_Config_Form_Field_Pickpoint_Updatelinks
 */
?>

<div class="astrio-pickpoint-config buttons-set">
    <button type="button" class="scalable" onclick="runPickpointAction('<?php echo $this->getUpdatePackstationsListUrl(); ?>');"><span><span><span><?php echo $this->__('Update packstations list'); ?></span></span></span></button>
    <button type="button" class="scalable" onclick="runPickpointAction('<?php echo $this->getUpdateCitiesListActionUrl(); ?>');"><span><span><span><?php echo $this->__('Update cities list'); ?></span></span></span></button>
    <button type="button" class="scalable" onclick="runPickpointAction('<?php echo $this->getUpdateZonesRateListUrl(); ?>');"><span><span><span><?php echo $this->__('Update zones rate list'); ?></span></span></span></button>
</div>

<div class="astrio-pickpoint-config descr">
    <p><?php echo $this->__('Please, update packstations, cities and zones lists after the module installation. Cron job is set up to automatically update them at 2 A.M.'); ?></p>
</div>

<script type="text/javascript">
//<![CDATA[
    function runPickpointAction(url) {
        new Ajax.Request(url + (url.match(new RegExp('\\?')) ? '&isAjax=true' : '?isAjax=true'), {
            method: 'post',
            onSuccess: function(transport) {
                try {
                    if (transport.responseText.isJSON()) {
                        var response = transport.responseText.evalJSON();
                        if (response.messages) {
                            $('messages').update(response.messages);
                        }
                    } else {
                        console.log('Error: response must be in JSON format');
                    }
                }
                catch (e) {
                    console.log('Error: ' + e.message);
                }
            }
        });
    }
//]]>
</script>